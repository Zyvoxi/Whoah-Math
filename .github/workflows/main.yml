name: Build Whoah-Math

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        build_type: [Release]
        c_compiler: [cl]
        cpp_compiler: [cl]

    steps:
    - uses: actions/checkout@v4

    - name: Install Homebrew for x86_64(macOS)
      if: runner.os == 'macOS'
      run: |
        sudo rm -rf /opt/homebrew
        arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

    - name: Install xcbeautify(macOS)
      if: runner.os == 'macOS'
      run: |
        arch -x86_64 /usr/local/bin/brew install xcbeautify

    - name: Install GMP for x86_64(macOS)
      if: runner.os == 'macOS'
      run: |
        arch -x86_64 /usr/local/bin/brew install gmp

    - name: Set reusable strings(Windows)
      if: runner.os == 'Windows'
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          echo "artifact-name=Whoah Math - Windows" >> "$GITHUB_OUTPUT"
          echo "executable-path=${{ github.workspace }}\\build\\Release\\Whoah-Math.exe" >> "$GITHUB_OUTPUT"
        fi

    - name: Configure CMake(Windows)
      if: runner.os == 'Windows'
      run: cmake -B ${{ steps.strings.outputs.build-output-dir }} -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -S ${{ github.workspace }}
        
    - name: Build with Xcode(macOS)
      if: runner.os == 'macOS'
      run: |
        xcodebuild -scheme Whoah -configuration Release -derivedDataPath build \
          ARCHS=x86_64 \
        | xcbeautify

    - name: Build with CMake(Windows)
      if: runner.os == 'Windows'
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Archive Artifacts(macOS)
      if: runner.os == 'macOS'
      run: |
        cd build/Build/Products/Release
        zip -r Whoah-Math.zip Whoah-Math
        mv Whoah-Math.zip $GITHUB_WORKSPACE/

    - name: Upload Artifacts(macOS)
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: Whoah Math - macOS
        path: Whoah-Math.zip
    
    - name: Upload Artifact(Windows)
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.strings.outputs.artifact-name }}
        path: ${{ steps.strings.outputs.executable-path }}
