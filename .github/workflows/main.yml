name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up C++ compiler
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Set up C++ compiler
        if: matrix.os == 'macos-latest'
        run: sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer

      - name: Build project (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build . --config Release

      - name: Build project (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build . --config Release

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-build
          path: build/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.os }}-build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/
          asset_name: ${{ matrix.os }}-build.zip
          asset_content_type: application/zip
