name: Build Whoah-Math

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
    - name: Check Architecture
      run: uname -m

    - name: Install Homebrew for x86_64
      run: |
        sudo rm -rf /opt/homebrew
        arch -x86_64 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        arch -x86_64 brew update

    - name: Uninstall GMP (if exists)
      run: |
        arch -x86_64 brew uninstall --ignore-dependencies gmp || true

    - name: Install GMP for x86_64
      run: |
        arch -x86_64 brew install gmp

    - name: Build with Xcode
      run: |
        xcodebuild -scheme Whoah -configuration Release -derivedDataPath build -disableAutomaticPackageResolution | xcbeautify

    - name: Archive Artifacts
      run: |
        cd build/Build/Products/Release
        zip -r Whoah-Math.zip Whoah-Math
        mv Whoah-Math.zip $GITHUB_WORKSPACE/

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Whoah Math - macOS
        path: Whoah-Math.zip

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          echo "artifact-name=Whoah Math - Windows" >> "$GITHUB_OUTPUT"
          echo "executable-path=${{ github.workspace }}\\build\\Release\\Whoah-Math.exe" >> "$GITHUB_OUTPUT"
        elif [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          echo "artifact-name=Whoah Math - Ubuntu" >> "$GITHUB_OUTPUT"
          echo "executable-path=${{ github.workspace }}/build/Whoah-Math" >> "$GITHUB_OUTPUT"
        fi

    - name: Install GMP on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y libgmp-dev

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.strings.outputs.artifact-name }}
        path: ${{ steps.strings.outputs.executable-path }}
